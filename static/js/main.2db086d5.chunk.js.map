{"version":3,"sources":["TVShowCard.js","TVShowList.js","Header.js","HomePage.js","Navbar.js","Error.js","DetailsPage.js","App.js","service/localStorage.js","serviceWorker.js","index.js"],"names":["TVShow","props","slicedName","name","length","slice","react_default","a","createElement","react_router_dom","to","concat","id","className","style","display","src","image","alt","TVShowList","newArray","tvShows","map","element","index","array","key","medium","react_transition_group","transitionName","transitionEnterTimeout","transitionLeaveTimeout","Header","opacity","type","onChange","onSearch","Home","data-ride","data-interval","images","href","role","data-slide","aria-hidden","Navbar","Error","DetailsPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","loading","error","_this2","match","params","fetch","then","response","json","status","setState","catch","err","_this3","favoriteTvShows","find","e","parseInt","text","_this$state$data","genres","premiered","officialSite","rating","summary","margin","average","onClick","saveInFavorites","_embedded","seasons","premiereDate","endDate","dangerouslySetInnerHTML","__html","cast","width","height","person","Component","App","event","filtered","filter","toLowerCase","includes","target","value","tvShowsFiltered","undefined","JSON","parse","localStorage","getItem","push","objectSpread","setItem","stringify","checkLocalStorage","tvShow","bind","assertThisInitialized","favoriteTvShowsFromLocalStorage","console","log","i","Math","floor","random","original","react_router","exact","path","render","DetailsPage_DetailsPage","assign","component","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2db086d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function TVShow(props){\r\n\r\n    const slicedName = props.name.length > 20 ? props.name.slice(0,20) + \"...\" : props.name\r\n\r\n    return (\r\n       \r\n    <Link to={`/${props.id}`}>\r\n    <div  className=\"card sm-12 md-6 lg-4 xl-3\" style={{display:\"inline-block\"}} >\r\n        <img src={props.image} className=\"card-img-top\" alt=\"...\" />\r\n         <div className=\"card-body\">\r\n            <p className=\"card-title\">{slicedName}</p>\r\n            \r\n             </div>\r\n                </div>\r\n             </Link>\r\n        \r\n    )    \r\n}","import React from \"react\";\r\nimport TVShowCard from \"./TVShowCard\";\r\n\r\n\r\nimport { CSSTransitionGroup } from 'react-transition-group'\r\n\r\nexport default function TVShowList(props) {\r\n \r\n    \r\n        // renderujemo puno kartica o serijama\r\n        // dovucemo podatke sa neta\r\n        // promenimo state\r\n        // renderujemo karticu\r\n        const newArray = props.tvShows.map((element, index, array)=>{\r\n            return <TVShowCard key={element.id}name={element.name} image={element.image.medium} id={element.id}/>\r\n        })\r\n       \r\n        return <div className=\"container-fluid\">\r\n         <CSSTransitionGroup\r\n          transitionName=\"example-enter-active\"\r\n          transitionEnterTimeout={5000}\r\n          transitionLeaveTimeout={3000}>\r\n          {newArray}\r\n          </CSSTransitionGroup></div>\r\n}\r\n\r\n","import React from \"react\";\r\n// import \"./Header.css\";\r\n\r\nexport default function Header(props){\r\nreturn (\r\n<div className=\"navbar\">\r\n    <h3>All popular TV-Shows on one place</h3>\r\n    <input style={{opacity: \"0.8\"}} className=\"nav-item\"type=\"text\" onChange={props.onSearch} />    \r\n</div>)\r\n\r\n}","import React from \"react\";\r\n\r\nexport default function Home(props){\r\n\r\n   \r\n        return(\r\n            <div>               \r\n                <div id=\"carouselExampleFade\" className=\"carousel slide carousel-fade\" data-ride=\"carousel\">\r\n                    <div className=\"carousel-inner\">\r\n                        <div className=\"carousel-item active\" data-interval=\"2000\">\r\n                            <img src={props.images[0]} className=\"d-block w-100\" alt=\"...\"></img>\r\n                        </div>\r\n                        <div className=\"carousel-item\" data-interval=\"2000\">\r\n                            <img src={props.images[1]} className=\"d-block w-100\" alt=\"...\"></img>\r\n                        </div>\r\n                        <div className=\"carousel-item\" data-interval=\"2000\">\r\n                            <img src={props.images[2]} className=\"d-block w-100\" alt=\"...\"></img>\r\n                        </div>\r\n                        <div className=\"carousel-item\" data-interval=\"2000\">\r\n                            <img src={props.images[3]} className=\"d-block w-100\" alt=\"...\"></img>\r\n                        </div>\r\n                        <div className=\"carousel-item\" data-interval=\"2000\">\r\n                            <img src={props.images[4]} className=\"d-block w-100\" alt=\"...\"></img>\r\n                        </div>\r\n                    </div>\r\n                    <a className=\"carousel-control-prev\" href=\"#carouselExampleFade\" role=\"button\" data-slide=\"prev\">\r\n                        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                    <a className=\"carousel-control-next\" href=\"#carouselExampleFade\" role=\"button\" data-slide=\"next\">\r\n                        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n    \r\n","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar () {\r\n    return(\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\r\n                <Link className=\"navbar-brand\" href=\"/\">Home </Link>\r\n                <Link className=\"navbar-brand\" href=\"/series\">Series </Link>\r\n                <Link className=\"navbar-brand\" href=\"/favorites\">Favorites </Link>\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nexport default function Error(){\r\n    return <div>\r\n        <div className=\"container\"><Navbar /></div>\r\n        <div className=\"container err\"></div>\r\n    </div>\r\n}","import React, {Component} from  \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nimport Error from \"./Error\";\r\n\r\nexport default class DetailsPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            data: {\r\n                \r\n            },\r\n            loading: true,\r\n            error: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n      \r\n        \r\n        fetch(`http://api.tvmaze.com/shows/${id}?embed[]=seasons&embed[]=cast`)\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n            if (response.status === 404) {\r\n                // make the promise be rejected if we didn't get a 200 response\r\n                throw new Error(\"Not 200 response\")\r\n            }\r\n            this.setState({\r\n                data:response,\r\n                loading:false,\r\n                \r\n            })\r\n        }) \r\n        .catch(err=> this.setState({\r\n            loading:false, \r\n            error: true\r\n        }))\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.props.favoriteTvShows.find(e => e.id === parseInt(this.props.match.params.id))){\r\n            var text = \"Remove from favorites\"\r\n        } else {\r\n            text = \"Save in favorites\"\r\n        }\r\n\r\n\r\n        const {name, genres, premiered, officialSite, rating, image, summary} = this.state.data;\r\n        return (this.state.loading?<div className=\"spinner-border m-5\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>:\r\n      this.state.error?<Error/>:\r\n        <div className=\"container\">\r\n            <div  style={{margin: \"10px\" ,display:\"float\"}}>\r\n                <Navbar />\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h3>{name}</h3>\r\n                        <ul><b>Genres: </b>{genres.map((element, index)=><li key={index}>{element}</li>)}</ul>\r\n                        <p>Premiered: {premiered}</p>\r\n                        <a href={officialSite}>Official site</a>\r\n                        <h4>Rating: {rating.average}</h4>\r\n                        <button onClick={()=>this.props.saveInFavorites(this.props.match.params.id, this.props.favoriteTvShows, this.state.data)}>{text}</button>\r\n                    </div>\r\n                    <div className=\"col-sm\"><img src={image.medium} alt=\"...\"/></div>\r\n                    <div className=\"col-sm\">\r\n                        <ul>Seasons: {this.state.data._embedded.seasons.map((element,index)=><li key={index}>{element.premiereDate} - {element.endDate} </li>)}</ul></div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-8\" dangerouslySetInnerHTML={{__html: summary}}></div>\r\n                    <div className=\"col-sm-4\">\r\n                        <ul><b>Cast: </b>{this.state.data._embedded.cast.map((element,index)=><li key={index}><img width=\"30px\" height=\"40px\" src={element.person.image.medium} alt=\"...\"/> {element.person.name} </li>)}</ul>\r\n                        \r\n                </div>\r\n            </div>\r\n        </div>\r\n            \r\n        )}\r\n}","import React, { Component } from 'react';\nimport {Switch, Route} from \"react-router-dom\";\n\nimport './App.css';\nimport TVShowList from \"./TVShowList\";\nimport Header from \"./Header\";\nimport Home from \"./HomePage\";\nimport DetailsPage from \"./DetailsPage\";\nimport {saveInFavorites, checkLocalStorage} from \"./service/localStorage\";\nimport Error from \"./Error\";\nimport Navbar from \"./Navbar\";\n\nclass App extends Component {\n  constructor() {\n    super()\n// inicijalizujemo state\n    this.state = {\n    tvShows: [],\n    tvShowsFiltered: [],\n    favoriteTvShows: []\n    }\n    this.saveInFavorites = saveInFavorites.bind(this);\n    this.checkLocalStorage = checkLocalStorage.bind(this);\n  }\n\n  onSearch = (event) => {\n  const filtered = this.state.tvShows.filter((element)=>{\n    return element.name.toLowerCase().includes(event.target.value.toLowerCase())\n  })\n  this.setState({\n    tvShowsFiltered: filtered\n  })\n  }\n\n\n  componentDidMount(){\n    // dovlacimo podatke\n    fetch(\"http://api.tvmaze.com/shows\")\n    .then(response=>{\n        // konverzija iz json-a u js\n        return response.json()\n    })\n    .then(data=>{\n\n        // ubacujemo podatke u state\n        this.setState({\n            tvShows:data,\n            tvShowsFiltered:data\n        })\n    })\n    .catch(error=> console.log(error))\n\n    // dovlacimo podatke iz local storage\n    this.checkLocalStorage();\n  }\n    render() {\n\n      // console.log(this.state.tvShows);\n      const images = [];\n      if(this.state.tvShows.length>0) {\n        const length = this.state.tvShows.length;\n        for(var i=0; i < 5; i++) {\n          images.push(this.state.tvShows[Math.floor(Math.random()*length)].image.original);\n        }\n      }\n      \n\n\n      return (\n       \n          <Switch>\n            <Route  exact path=\"/\" render={()=>{\n              return ( <div className=\"container\" id=\"home\">\n                <Navbar />\n                <Home images={images}/>\n              </div>\n              )\n            }} />\n\n            <Route exact path=\"/series\" render={()=>{\n            return ( <div className=\"App container\" >\n              <Navbar />\n              <Header onSearch={this.onSearch}/>\n              <TVShowList  tvShows={this.state.tvShowsFiltered}/>\n            </div>)\n            }}/>\n\n            <Route exact path=\"/favorites\" render={()=>{\n            return ( <div className=\"App container\">\n              <Navbar />\n              <div className=\"navbar\">\n              <h3>List of all favorites TV-Shows</h3> \n            </div>\n            <TVShowList  tvShows={this.state.favoriteTvShows}/>\n            </div>)\n            }}/>\n\n            <Route exact path=\"/:id\" render={(props)=> <DetailsPage favoriteTvShows={this.state.favoriteTvShows} saveInFavorites={this.saveInFavorites} {...props}/>}  />\n\n            <Route component={Error}/>\n          </Switch>\n   \n        \n        \n      );\n    }\n}\n\nexport default App;\n","export function saveInFavorites(id, favoriteTvShows, data) {\r\n    // is there anything in localStorage\r\n    if (favoriteTvShows.length > 0) {\r\n      // check is there an id inside\r\n      if (favoriteTvShows.find(e => parseInt(e.id) === parseInt(id)) === undefined) {\r\n        // if there is not id inside\r\n        const favoriteTvShows = JSON.parse(localStorage.getItem(\"favoriteTvShows\"));\r\n        favoriteTvShows.push({ id, ...data });\r\n        localStorage.setItem(\"favoriteTvShows\", JSON.stringify(favoriteTvShows));\r\n        this.checkLocalStorage();\r\n      } else {\r\n        // if there is id inside, remove id\r\n        var tvShows = JSON.parse(localStorage.getItem(\"favoriteTvShows\"));\r\n        tvShows = tvShows.filter(tvShow =>  parseInt(tvShow.id) !== parseInt(id));\r\n        localStorage.setItem(\"favoriteTvShows\", JSON.stringify(tvShows));\r\n        this.checkLocalStorage();\r\n      }\r\n    } else {\r\n      // if favoriteTvShows does not exist\r\n      const favoriteTvShows = [];\r\n      favoriteTvShows.push({ id, ...data }); \r\n      localStorage.setItem(\"favoriteTvShows\", JSON.stringify(favoriteTvShows));\r\n      this.checkLocalStorage();\r\n    }\r\n  }\r\n  \r\n  export function checkLocalStorage() {\r\n    if (localStorage.getItem(\"favoriteTvShows\") !== null) {\r\n        // if there is smth in local storage set the state\r\n      const favoriteTvShowsFromLocalStorage = JSON.parse(localStorage.getItem(\"favoriteTvShows\"));\r\n      this.setState({\r\n        favoriteTvShows: favoriteTvShowsFromLocalStorage\r\n      });\r\n    } else {\r\n      this.setState({\r\n        favoriteTvShows: []\r\n      });\r\n    }\r\n  }\r\n  \r\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<HashRouter>\n    <App />\n</HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}