{"version":3,"sources":["TVShowCard.js","TVShowList.js","Header.js","HomePage.js","Navbar.js","Error.js","DetailsPage.js","App.js","service/localStorage.js","serviceWorker.js","index.js"],"names":["TVShow","props","slicedName","name","length","slice","react_default","a","createElement","react_router_dom","to","concat","id","className","style","display","src","image","alt","TVShowList","newArray","tvShows","map","element","index","array","key","medium","Header","opacity","type","onChange","onSearch","Home","data-ride","data-interval","images","href","role","data-slide","aria-hidden","Navbar","Error","DetailsPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","loading","error","_this2","match","params","fetch","then","response","json","status","setState","catch","err","_this3","favoriteTvShows","find","e","parseInt","text","_this$state$data","genres","premiered","officialSite","rating","summary","margin","average","onClick","saveInFavorites","_embedded","seasons","premiereDate","endDate","dangerouslySetInnerHTML","__html","cast","width","height","person","Component","App","event","filtered","filter","toLowerCase","includes","target","value","tvShowsFiltered","undefined","JSON","parse","localStorage","getItem","push","objectSpread","setItem","stringify","checkLocalStorage","tvShow","bind","assertThisInitialized","favoriteTvShowsFromLocalStorage","console","log","i","Math","floor","random","original","react_router","exact","path","render","DetailsPage_DetailsPage","assign","component","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08351756.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function TVShow(props) {\r\n  const slicedName =\r\n    props.name.length > 20 ? props.name.slice(0, 20) + \"...\" : props.name;\r\n\r\n  return (\r\n    <Link to={`/${props.id}`}>\r\n      <div\r\n        className=\"card sm-12 md-6 lg-4 xl-3\"\r\n        style={{ display: \"inline-block\" }}\r\n      >\r\n        <img src={props.image} className=\"card-img-top\" alt=\"...\" />\r\n        <div className=\"card-body\">\r\n          <p className=\"card-title\">{slicedName}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TVShowCard from \"./TVShowCard\";\r\n\r\nexport default function TVShowList(props) {\r\n  // renderujemo puno kartica o serijama\r\n  // dovucemo podatke sa neta\r\n  // renderujemo karticu\r\n  const newArray = props.tvShows.map((element, index, array) => {\r\n    return (\r\n      <TVShowCard\r\n        key={element.id}\r\n        name={element.name}\r\n        image={element.image.medium}\r\n        id={element.id}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className=\"container-fluid\">{newArray}</div>;\r\n}\r\n","import React from \"react\";\r\n// import \"./Header.css\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h3>All popular TV-Shows on one place</h3>\r\n      <input\r\n        style={{ opacity: \"0.8\" }}\r\n        className=\"nav-item\"\r\n        type=\"text\"\r\n        onChange={props.onSearch}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <div>\r\n      <div\r\n        id=\"carouselExampleFade\"\r\n        className=\"carousel slide carousel-fade\"\r\n        data-ride=\"carousel\"\r\n      >\r\n        <div className=\"carousel-inner\">\r\n          <div className=\"carousel-item active\" data-interval=\"2000\">\r\n            <img src={props.images[0]} className=\"d-block w-100\" alt=\"...\" />\r\n          </div>\r\n          <div className=\"carousel-item\" data-interval=\"2000\">\r\n            <img src={props.images[1]} className=\"d-block w-100\" alt=\"...\" />\r\n          </div>\r\n          <div className=\"carousel-item\" data-interval=\"2000\">\r\n            <img src={props.images[2]} className=\"d-block w-100\" alt=\"...\" />\r\n          </div>\r\n          <div className=\"carousel-item\" data-interval=\"2000\">\r\n            <img src={props.images[3]} className=\"d-block w-100\" alt=\"...\" />\r\n          </div>\r\n          <div className=\"carousel-item\" data-interval=\"2000\">\r\n            <img src={props.images[4]} className=\"d-block w-100\" alt=\"...\" />\r\n          </div>\r\n        </div>\r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          href=\"#carouselExampleFade\"\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\r\n          <span className=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          href=\"#carouselExampleFade\"\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\" />\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Home{\" \"}\r\n        </Link>\r\n        <Link className=\"navbar-brand\" to=\"/series\">\r\n          Series{\" \"}\r\n        </Link>\r\n        <Link className=\"navbar-brand\" to=\"/favorites\">\r\n          Favorites{\" \"}\r\n        </Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nexport default function Error() {\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <Navbar />\r\n      </div>\r\n      <div className=\"container err\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nimport Error from \"./Error\";\r\n\r\nexport default class DetailsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      loading: true,\r\n      error: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    fetch(`http://api.tvmaze.com/shows/${id}?embed[]=seasons&embed[]=cast`)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response.status === 404) {\r\n          // make the promise be rejected if we didn't get a 200 response\r\n          throw new Error(\"Not 200 response\");\r\n        }\r\n        this.setState({\r\n          data: response,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(err =>\r\n        this.setState({\r\n          loading: false,\r\n          error: true\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    if (\r\n      this.props.favoriteTvShows.find(\r\n        e => e.id === parseInt(this.props.match.params.id)\r\n      )\r\n    ) {\r\n      var text = \"Remove from favorites\";\r\n    } else {\r\n      text = \"Save in favorites\";\r\n    }\r\n\r\n    const {\r\n      name,\r\n      genres,\r\n      premiered,\r\n      officialSite,\r\n      rating,\r\n      image,\r\n      summary\r\n    } = this.state.data;\r\n    // dodajemo loading animaciju\r\n    return this.state.loading ? (\r\n      <div className=\"spinner-border m-5\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    ) : this.state.error ? (\r\n      <Error />\r\n    ) : (\r\n      <div className=\"container\">\r\n        <div style={{ margin: \"10px\", display: \"float\" }}>\r\n          <Navbar />\r\n          <div className=\"row\">\r\n            <div className=\"col-sm\">\r\n              <h3>{name}</h3>\r\n              <ul>\r\n                <b>Genres: </b>\r\n                {genres.map((element, index) => (\r\n                  <li key={index}>{element}</li>\r\n                ))}\r\n              </ul>\r\n              <p>Premiered: {premiered}</p>\r\n              <a href={officialSite}>Official site</a>\r\n              <h4>Rating: {rating.average}</h4>\r\n              <button\r\n                onClick={() =>\r\n                  this.props.saveInFavorites(\r\n                    this.props.match.params.id,\r\n                    this.props.favoriteTvShows,\r\n                    this.state.data\r\n                  )\r\n                }\r\n              >\r\n                {text}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <img src={image.medium} alt=\"...\" />\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <ul>\r\n                Seasons:{\" \"}\r\n                {this.state.data._embedded.seasons.map((element, index) => (\r\n                  <li key={index}>\r\n                    {element.premiereDate} - {element.endDate}{\" \"}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-sm-8\"\r\n            dangerouslySetInnerHTML={{ __html: summary }}\r\n          />\r\n          <div className=\"col-sm-4\">\r\n            <ul>\r\n              <b>Cast: </b>\r\n              {this.state.data._embedded.cast.map((element, index) => (\r\n                <li key={index}>\r\n                  <img\r\n                    width=\"30px\"\r\n                    height=\"40px\"\r\n                    src={element.person.image.medium}\r\n                    alt=\"...\"\r\n                  />{\" \"}\r\n                  {element.person.name}{\" \"}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport TVShowList from \"./TVShowList\";\nimport Header from \"./Header\";\nimport Home from \"./HomePage\";\nimport DetailsPage from \"./DetailsPage\";\nimport { saveInFavorites, checkLocalStorage } from \"./service/localStorage\";\nimport Error from \"./Error\";\nimport Navbar from \"./Navbar\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    // inicijalizujemo state\n    this.state = {\n      tvShows: [],\n      tvShowsFiltered: [],\n      favoriteTvShows: []\n    };\n    this.saveInFavorites = saveInFavorites.bind(this);\n    this.checkLocalStorage = checkLocalStorage.bind(this);\n  }\n  //pretrazujemo niz objekata po imenu\n  onSearch = event => {\n    const filtered = this.state.tvShows.filter(element => {\n      return element.name\n        .toLowerCase()\n        .includes(event.target.value.toLowerCase());\n    });\n    this.setState({\n      tvShowsFiltered: filtered\n    });\n  };\n\n  componentDidMount() {\n    // dovlacimo podatke\n    fetch(\"http://api.tvmaze.com/shows\")\n      .then(response => {\n        // konverzija iz json-a u js\n        return response.json();\n      })\n      .then(data => {\n        // ubacujemo podatke u state\n        this.setState({\n          tvShows: data,\n          tvShowsFiltered: data\n        });\n      })\n      .catch(error => console.log(error));\n\n    // dovlacimo podatke iz local storage\n    this.checkLocalStorage();\n  }\n  render() {\n    const images = [];\n    if (this.state.tvShows.length > 0) {\n      const length = this.state.tvShows.length;\n      for (var i = 0; i < 5; i++) {\n        images.push(\n          this.state.tvShows[Math.floor(Math.random() * length)].image.original\n        );\n      }\n    }\n\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return (\n              <div className=\"container\" id=\"home\">\n                <Navbar />\n                <Home images={images} />\n              </div>\n            );\n          }}\n        />\n\n        <Route\n          exact\n          path=\"/series\"\n          render={() => {\n            return (\n              <div className=\"App container\">\n                <Navbar />\n                <Header onSearch={this.onSearch} />\n                <TVShowList tvShows={this.state.tvShowsFiltered} />\n              </div>\n            );\n          }}\n        />\n\n        <Route\n          exact\n          path=\"/favorites\"\n          render={() => {\n            return (\n              <div className=\"App container\">\n                <Navbar />\n                <div className=\"navbar\">\n                  <h3>List of all favorites TV-Shows</h3>\n                </div>\n                <TVShowList tvShows={this.state.favoriteTvShows} />\n              </div>\n            );\n          }}\n        />\n\n        <Route\n          exact\n          path=\"/:id\"\n          render={props => (\n            <DetailsPage\n              favoriteTvShows={this.state.favoriteTvShows}\n              saveInFavorites={this.saveInFavorites}\n              {...props}\n            />\n          )}\n        />\n\n        <Route component={Error} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","export function saveInFavorites(id, favoriteTvShows, data) {\r\n  // is there anything in localStorage\r\n  if (favoriteTvShows.length > 0) {\r\n    // check is there an id inside\r\n    if (\r\n      favoriteTvShows.find(e => parseInt(e.id) === parseInt(id)) === undefined\r\n    ) {\r\n      // if there is not id inside\r\n      const favoriteTvShows = JSON.parse(\r\n        localStorage.getItem(\"favoriteTvShows\")\r\n      );\r\n      favoriteTvShows.push({ id, ...data });\r\n      localStorage.setItem(\"favoriteTvShows\", JSON.stringify(favoriteTvShows));\r\n      this.checkLocalStorage();\r\n    } else {\r\n      // if there is id inside, remove id\r\n      var tvShows = JSON.parse(localStorage.getItem(\"favoriteTvShows\"));\r\n      tvShows = tvShows.filter(tvShow => parseInt(tvShow.id) !== parseInt(id));\r\n      localStorage.setItem(\"favoriteTvShows\", JSON.stringify(tvShows));\r\n      this.checkLocalStorage();\r\n    }\r\n  } else {\r\n    // if favoriteTvShows does not exist\r\n    const favoriteTvShows = [];\r\n    favoriteTvShows.push({ id, ...data });\r\n    localStorage.setItem(\"favoriteTvShows\", JSON.stringify(favoriteTvShows));\r\n    this.checkLocalStorage();\r\n  }\r\n}\r\n\r\nexport function checkLocalStorage() {\r\n  if (localStorage.getItem(\"favoriteTvShows\") !== null) {\r\n    // if there is smth in local storage set the state\r\n    const favoriteTvShowsFromLocalStorage = JSON.parse(\r\n      localStorage.getItem(\"favoriteTvShows\")\r\n    );\r\n    this.setState({\r\n      favoriteTvShows: favoriteTvShowsFromLocalStorage\r\n    });\r\n  } else {\r\n    this.setState({\r\n      favoriteTvShows: []\r\n    });\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}